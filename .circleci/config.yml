# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

references:
  node-8: &node-8
    working_directory: ~/repo
    docker:
      - image: circleci/node:8
  node-10: &node-10
    working_directory: ~/repo
    docker:
      - image: circleci/node:10
  node-12: &node-12
    working_directory: ~/repo
    docker:
      - image: circleci/node:12
  restore-cache: &restore-cache
    keys:
      - v4-monorepo-{{ checksum "yarn.lock" }}-{{ checksum ".circleci/config.yml" }}
      - v4-monorepo-{{ checksum "yarn.lock" }}
      - v4-monorepo-
  save-cache: &save-cache
    key: v4-monorepo-{{ checksum "yarn.lock" }}-{{ checksum ".circleci/config.yml" }}
    paths:
      - ~/.ssh
      - ~/.cache/yarn
      - ~/.cache/yarn-packages-cache
      - node_modules
  attach-ws: &attach-ws
    at: ~/repo
  yarn: &yarn
    name: Install Dependencies
    command: yarn install --prefer-offline --pure-lockfile --frozen-lockfile || yarn install --pure-lockfile --frozen-lockfile
  test:
    &test # TODO: add the `--all` flag when needed, to overwrite the --onlyChanged
    name: Run Tests
    command: yarn run test:ci --all
  lint:
    &lint # TODO: add the `--all` flag when needed, to overwrite the --onlyChanged
    name: Lint Packages
    command: yarn run lint:ci --all
  git: &git
    name: Configure git settings
    command: |-
      git config user.email "opensource@tunnckocore.com"
      git config user.name "Charlike Mike Reagent"
      # git config user.signingkey "$GIT_SIGNING_KEY"
      # git config commit.gpgsign true
  npm: &npm
    name: Configure npm settings
    command: |-
      echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc

jobs:
  node_8:
    <<: *node-8
    steps:
      - checkout
      - run: *yarn
      - run: yarn start build
      - save_cache: *save-cache
      - persist_to_workspace:
          root: .
          paths:
            - .
  node_10:
    <<: *node-10
    steps:
      - checkout
      - attach_workspace: *attach-ws
      - restore_cache: *restore-cache
      - run: yarn start build
  node_12:
    <<: *node-12
    steps:
      - checkout
      - attach_workspace: *attach-ws
      - restore_cache: *restore-cache
      - run: yarn start build
  # test-node-10:
  #   <<: *node-10
  #   steps:
  #     # - checkout
  #     - attach_workspace: *attach-ws
  #     - restore_cache: *restore-cache
  #     - run: *test
  #     - run:
  #         name: Send CodeCov Results
  #         command: bash <(curl -s https://codecov.io/bash)
  # lint:
  #   <<: *node-10
  #   steps:
  #     # - checkout
  #     - attach_workspace: *attach-ws
  #     - restore_cache: *restore-cache
  #     - run: *lint
  # typecheck:
  #   <<: *node-10
  #   steps:
  #     # - checkout
  #     - attach_workspace: *attach-ws
  #     - restore_cache: *restore-cache
  #     - run:
  #         name: Type checking with TypeScript
  #         command: yarn run type:check
  # build:
  #   <<: *node-10
  #   steps:
  #     # - checkout
  #     - attach_workspace: *attach-ws
  #     - restore_cache: *restore-cache
  #     - run:
  #         name: Build for Production
  #         command: yarn run build
  #     - persist_to_workspace:
  #         root: .
  #         paths:
  #           - .
  # deploy:
  #   <<: *node-10
  #   steps:
  #     # - checkout
  #     - attach_workspace: *attach-ws
  #     - restore_cache: *restore-cache
  #     - add_ssh_keys: # User machine's key fingerprint (CircleCI User Key)
  #         fingerprints: # Fingerprint of the special SSH key for CircleCI
  #           - '65:dd:e6:57:21:52:c4:c6:c8:59:b4:56:f3:65:ec:b4'
  #     # - run:
  #     #     name: KeyScan GitHub
  #     #     command: ssh-keyscan -H github.com >> ~/.ssh/known_hosts
  #     - run: *git
  #     - run: *npm
  #     - run: git status
  #     - run:
  #         name: Publish to npm and GitHub
  #         command: yarn run release

workflows:
  version: 2
  automation:
    jobs:
      #                    typecheck
      # install -> lint -> test node 8  -> build -> deploy (only on master)
      #                    test node 10
      - node_8
      - node_10
      - node_12
      # - lint:
      #     requires:
      #       - install
      # - typecheck:
      #     requires:
      #       - install
      # - test-node-8:
      #     requires:
      #       - install
      # - test-node-10:
      #     requires:
      #       - install
      # - build:
      #     requires:
      #       - lint
      #       - typecheck
      #       - test-node-8
      #       - test-node-10
      # - deploy:
      #     requires:
      #       - build
      #     filters:
      #       branches:
      #         only: master
